generate_samples.py  |
—--------------------

Generate your own positive and negative (face and non-face) samples:

INSTRUCTIONS:

Making use of the text files specifying the facial keypoints coordinates for 
the FERET database, as well as random background images contained in the Caltech backgrounds dataset, this code generates multiple face and non-face examples.

The user should define the following:

#PositiveDir: Location of the FERET set containing the images and text files with coordinated for the facial keypoints labeled

#NegativeDir: Folder with non-face images (e.g. the CalTech background set)

#w, h: Scanning and cropping window size

#TrainSet: Path where the cropped images are to be saved (i.e. the training sample)

The TrainSet needs to contain two folders, named ‘face’ and ‘nonface’. That is where the training samples are going to be stored and then loaded for the “CNN_training.py” script.

————————————————————————————————————————————————————————————————————————————
CNN_training.py  |
—-----------------

Train and fit a single, multi-layered Convolutional Neural
Network on the face and nonface sample generated by "generate_samples.py".

INSTRUCTIONS:

#TrainSet: Directory where all the images used as the training sample are stored. This corresponds to the path of the generate_samples.py output.

#CNN_Weights: This is the directory where the weights of the Convolutional Neural Network are to be saved after it’s done training.

#net: This is the Neural Network model. The architecture can be changed here in terms of the numbers and type of layers, activation functions and convergence criteria (epochs, algorithms etc.)

————————————————————————————————————————————————————————————————————————————
face_detection.py |  
—------------------

Detect faces in one or more images using a fitted convolutional neural network.
The hyperparameters and weights for the model are loaded from the output of  
"CNN_training.py" as “CNN Weights”


#scale_factor: Downscaling factor for the Gaussian pyramid scaling
 
#step: Step of scanning window (in pixels)

#SourceDir: Directory where image(s) are located for face detection
  
#aggressive: If true, then aggressive merging of overlapping windows is 

#CNN_Weights: Location where the trained CNN weights are saved at
